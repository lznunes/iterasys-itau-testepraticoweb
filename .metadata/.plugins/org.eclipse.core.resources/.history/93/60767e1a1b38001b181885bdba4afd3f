package Steps;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

import java.io.File;
import java.io.IOException;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;

import com.google.common.io.Files;

import Base.Base;
import Pages.HomePage;
import cucumber.api.java.After;
import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;


public class ConsultaRacaoSteps extends Base {
	private static WebDriver driver;
	protected static HomePage homePage;
	
	@Before
	public static void inicia() {
		System.setProperty("webdriver.chrome.driver","C:\\Users\\nunesnel\\aula\\iterasys-web\\TestWeb\\drives\\chromedriver.exe");
		homePage = new HomePage(driver);
	}
	
	@Given("^Acesso o site$")
	public void acesso_o_site() throws Throwable {
	    pastalog = gerapastalog();
	    homePage.carregasite();
	    assertThat(homePage.obterTitulo(), is("Pet Shop: Petz o maior pet shop do Brasil."));
	}

	@When("^Consulta o terceiro produto retornado da busca$")
	public void consulta_o_terceiro_produto_retornado_da_busca() throws Throwable {
		homePage.localizProdutos("Ração");
		homePage.clicanoProduto3();
		//assertTrue(homePage.obterTitulo().contains("Ração"));
	}

	@Then("^Valida nome do produto, fornecedor, preco normal e precoassinante$")
	public void valida_nome_do_produto_fornecedor_preco_normal_e_precoassinante() {
		fornecedor = homePage.fornecedorProduto();
		nomeproduto = homePage.descricaoProduto();
		preconormal = homePage.preconormalProduto();
		precoassinante =homePage.precoassinanteProduto();
		assertNotEquals("", nomeproduto);
		assertNotEquals("", fornecedor);
		assertNotEquals("", preconormal);
		assertNotEquals("", precoassinante);
	}

	@Then("^Insire o produto no carrinho de compras$")
	public void insire_o_produto_no_carrinho_de_compras() throws Throwable {
		homePage.clicaAdicionarCarrinho();
		decricaocarrinho = homePage.descricaoProduto();
		precocarrinho = homePage.precoProdutoCarrinho();
		assertNotEquals("", decricaocarrinho);
		assertNotEquals("", precocarrinho);
	}

	@Then("^Valide se os dados do item tres continuam identicos$")
	public void valide_se_os_dados_do_item_tres_continuam_identicos(){
		homePage.limpacarrinho();
		assertEquals(nomeproduto + " ", decricaocarrinho);
		assertEquals(preconormal, precocarrinho);
	}
	
	@After
	public static void encerra() {
		homePage.driver.quit();
	}
	
	//captura tela
	public void capturascreen(String produto, String passo, String pastalog) {
		var screen = (TakesScreenshot) homePage.driver;
		File pasta = new File("C:\\Users\\nunesnel\\aula\\iterasys-web\\TestWeb\\src\\test\\resources\\" + pastalog);
		pasta.mkdir();
		File arquivo = screen.getScreenshotAs(OutputType.FILE);
		try {
		Files.move(arquivo, new File(pasta + "//Teste_" + produto + "_" + passo + ".png"));
		} catch (IOException e) {
		e.printStackTrace();
	}
}


}
